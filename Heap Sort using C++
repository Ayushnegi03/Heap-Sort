// C++ program for implementation of Heap Sort
#include <iostream>
using namespace std;
void heap(int arr[], int n, int i)
{
	int Large = i;
	int L = 2 * i + 1;
	int R = 2 * i + 2;
	if (L < n && a[L] > a[Large])
		Large = L;
	if (R < n && a[R] > a[Large])
		Large = R;
	if (Large != i) {
		swap(a[i], a[Large]);
		heap(a, n, Large);
	}
}
void HeapSort(int a[], int n)
{
	for (int i = n / 2 - 1; i >= 0; i--)
		heap(a, n, i);
	for (int i = n - 1; i > 0; i--) 
  {
		swap(a[0], a[i]);
		heap(a, i, 0);
	}
}
void PrintArray(int a[], int n)
{
	for (int i = 0; i < n; ++i)
		cout << a[i] << " ";
	cout << "\n";
}
int main()
{
	int a[] = { 12, 11, 13, 5, 6, 7 };
	int n = sizeof(a) / sizeof(arr[0]);
	HeapSort(a, n);
	cout << "Sorted array is \n";
	printArray(a, n);
}
#Output->
#Sorted array is 
#5 6 7 11 12 13 
